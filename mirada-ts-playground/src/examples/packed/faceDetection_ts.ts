
export const faceDetection_ts: string = ";(async () => {\n  const canvas = document.getElementById('outputCanvas')!\n  var src = await cv.imread(canvas)\n  let gray = new cv.Mat()\n  cv.cvtColor(src, gray, cv.COLOR_RGBA2GRAY, 0)\n  let faces = new cv.RectVector()\n  let eyes = new cv.RectVector()\n  let faceCascade = new cv.CascadeClassifier()\n  let eyeCascade = new cv.CascadeClassifier()\n\n  async function loadDataFile(url: string, name?: string) {\n    name = name || url.substring(url.lastIndexOf('/') + 1, url.length)\n    // Heads up! we need to verify that the files don't already exists if not it throws!\n    if (!cv.FS.readdir('/').includes(name)) {\n      const r = await fetch(url)\n      await cv.FS.createDataFile('/', name, new Uint8ClampedArray(await r.arrayBuffer()), true, false, false)\n    }\n    return name\n  }\n  // load pre-trained classifier files. They are available at the same location than the index.html.\n  // the previous function take care of fetching them and creating the Files (emscripten FS).\n  faceCascade.load(await loadDataFile('haarcascade_frontalface_default.xml'))\n  eyeCascade.load(await loadDataFile('haarcascade_eye.xml'))\n\n  // detect faces\n  let mSize = new cv.Size(0, 0)\n  faceCascade.detectMultiScale(gray, faces, 1.1, 3, 0, mSize, mSize)\n\n  for (let i = 0; i < faces.size(); ++i) {\n    let roiGray = gray.roi(faces.get(i))\n    let roiSrc = src.roi(faces.get(i))\n    let point1 = new cv.Point(faces.get(i).x, faces.get(i).y)\n    let point2 = new cv.Point(faces.get(i).x + faces.get(i).width, faces.get(i).y + faces.get(i).height)\n    cv.rectangle(src, point1, point2, [255, 0, 0, 255])\n    // detect eyes in face ROI\n    eyeCascade.detectMultiScale(roiGray, eyes)\n    for (let j = 0; j < eyes.size(); ++j) {\n      let point1 = new cv.Point(eyes.get(j).x, eyes.get(j).y)\n      let point2 = new cv.Point(eyes.get(j).x + eyes.get(j).width, eyes.get(j).y + eyes.get(j).height)\n      cv.rectangle(roiSrc, point1, point2, [0, 0, 255, 255])\n    }\n    roiGray.delete()\n    roiSrc.delete()\n  }\n  cv.imshow(canvas, src)\n  src.delete()\n  gray.delete()\n  faceCascade.delete()\n  eyeCascade.delete()\n  faces.delete()\n  eyes.delete()\n})()\n";
