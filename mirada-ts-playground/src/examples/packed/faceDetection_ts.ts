
export const faceDetection_ts: string = "\nimport { CV} from 'mirada'\nimport * as Mirada_ from 'mirada'\ndeclare var Mirada: typeof Mirada_\ndeclare var cv: CV&{FS:Mirada_.FS}\n \n(async ()=>{\n  const src = await Mirada.fromUrl('lenna.jpg')\n  let gray = new cv.Mat()\n  cv.cvtColor(src, gray, cv.COLOR_RGBA2GRAY, 0)\n  let faces = new cv.RectVector()\n  let eyes = new cv.RectVector()\n  let faceCascade = new cv.CascadeClassifier()\n  let eyeCascade = new cv.CascadeClassifier()\n\n  async function  fetchDataFile (f:string)  {\n    const  r = await fetch(f)\n    const b = await r.arrayBuffer()\n    return new Uint8ClampedArray(b)\n  }\n  async function loadDataFile(url: string){\n    const name = url.substring(url.lastIndexOf('/')+1, url.length)\n  if(!cv.FS.readdir('/').includes(name)) {\n    await   cv.FS.createDataFile('/', name, await fetchDataFile(url), true, false, false)\n    }\n  }\n  // load pre-trained classifier files (./test/assets/*.xml)\n  await loadDataFile('haarcascade_frontalface_default.xml')\n  faceCascade.load('haarcascade_frontalface_default.xml')\n  await loadDataFile('haarcascade_eye.xml')\n  eyeCascade.load('haarcascade_eye.xml')\n\n  // detect faces\n  let msize = new cv.Size(0, 0)\n  faceCascade.detectMultiScale(gray, faces, 1.1, 3, 0, msize, msize)\n\n  for (let i = 0; i < faces.size(); ++i) {\n    let roiGray = gray.roi(faces.get(i))\n    let roiSrc = src.roi(faces.get(i))\n    let point1 = new cv.Point(faces.get(i).x, faces.get(i).y)\n    let point2 = new cv.Point(faces.get(i).x + faces.get(i).width,\n      faces.get(i).y + faces.get(i).height)\n    cv.rectangle(src, point1, point2, [255, 0, 0, 255])\n    // detect eyes in face ROI\n    eyeCascade.detectMultiScale(roiGray, eyes)\n    for (let j = 0; j < eyes.size(); ++j) {\n      let point1 = new cv.Point(eyes.get(j).x, eyes.get(j).y)\n      let point2 = new cv.Point(eyes.get(j).x + eyes.get(j).width,\n        eyes.get(j).y + eyes.get(j).height)\n      cv.rectangle(roiSrc, point1, point2, [0, 0, 255, 255])\n    }\n    roiGray.delete(); roiSrc.delete()\n  }\n  cv.imshow(document.getElementById('outputCanvas')!, src)\n  src.delete(); gray.delete(); faceCascade.delete();\n  eyeCascade.delete(); faces.delete(); eyes.delete()\n\n})()";
