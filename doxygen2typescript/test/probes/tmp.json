{
  "doxygen": {
    "$": {
      "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
      "xsi:noNamespaceSchemaLocation": "compound.xsd",
      "version": "1.8.13"
    },
    "compounddef": [
      {
        "$": {
          "id": "dd/d01/group__videoio__winrt",
          "kind": "group"
        },
        "compoundname": [
          "videoio_winrt"
        ],
        "title": [
          "WinRT glue for video I/O"
        ],
        "sectiondef": [
          {
            "$": {
              "kind": "enum"
            },
            "memberdef": [
              {
                "$": {
                  "kind": "enum",
                  "id": "dd/d01/group__videoio__winrt_1ga5291115322efc2f86c7551ab37ab6554",
                  "prot": "public",
                  "static": "no"
                },
                "name": [
                  "@83"
                ],
                "enumvalue": [
                  {
                    "$": {
                      "id": "dd/d01/group__videoio__winrt_1gga5291115322efc2f86c7551ab37ab6554a0138ded351ab41c87d216bf128bcc1b7",
                      "prot": "public"
                    },
                    "name": [
                      "OPEN_CAMERA"
                    ],
                    "initializer": [
                      "= 300"
                    ],
                    "briefdescription": [
                      "\n          "
                    ],
                    "detaileddescription": [
                      "\n          "
                    ]
                  },
                  {
                    "$": {
                      "id": "dd/d01/group__videoio__winrt_1gga5291115322efc2f86c7551ab37ab6554a5a4ff95ee598bda6d396d9c2170b2583",
                      "prot": "public"
                    },
                    "name": [
                      "CLOSE_CAMERA"
                    ],
                    "briefdescription": [
                      "\n          "
                    ],
                    "detaileddescription": [
                      "\n          "
                    ]
                  },
                  {
                    "$": {
                      "id": "dd/d01/group__videoio__winrt_1gga5291115322efc2f86c7551ab37ab6554a8905331d148c6456bb412654b366886a",
                      "prot": "public"
                    },
                    "name": [
                      "UPDATE_IMAGE_ELEMENT"
                    ],
                    "briefdescription": [
                      "\n          "
                    ],
                    "detaileddescription": [
                      "\n          "
                    ]
                  },
                  {
                    "$": {
                      "id": "dd/d01/group__videoio__winrt_1gga5291115322efc2f86c7551ab37ab6554ac59c8b93c4987d5342beea897023e8e8",
                      "prot": "public"
                    },
                    "name": [
                      "SHOW_TRACKBAR"
                    ],
                    "briefdescription": [
                      "\n          "
                    ],
                    "detaileddescription": [
                      "\n          "
                    ]
                  }
                ],
                "briefdescription": [
                  "\n        "
                ],
                "detaileddescription": [
                  "\n        "
                ],
                "inbodydescription": [
                  "\n        "
                ],
                "location": [
                  {
                    "$": {
                      "file": "opencv2/videoio/cap_winrt.hpp",
                      "line": "39",
                      "column": "1",
                      "bodyfile": "opencv2/videoio/cap_winrt.hpp",
                      "bodystart": "39",
                      "bodyend": "44"
                    }
                  }
                ]
              }
            ]
          },
          {
            "$": {
              "kind": "func"
            },
            "memberdef": [
              {
                "$": {
                  "kind": "function",
                  "id": "dd/d01/group__videoio__winrt_1gae38c075896983dfe2de0d6bc5b15ace8",
                  "prot": "public",
                  "static": "no",
                  "const": "no",
                  "explicit": "no",
                  "inline": "no",
                  "virt": "non-virtual"
                },
                "type": [
                  "void"
                ],
                "definition": [
                  "void cv::winrt_imshow"
                ],
                "argsstring": [
                  "()"
                ],
                "name": [
                  "winrt_imshow"
                ],
                "briefdescription": [
                  "\n        "
                ],
                "detaileddescription": [
                  {
                    "para": [
                      {
                        "simplesect": [
                          {
                            "$": {
                              "kind": "note"
                            },
                            "para": [
                              {
                                "_": "Must be called to update attached image source. Code sample is available for . ",
                                "ref": [
                                  {
                                    "_": "winrt_startMessageLoop()",
                                    "$": {
                                      "refid": "dd/d01/group__videoio__winrt_1gac0bbefb5e7954d63596698905f20b2ed",
                                      "kindref": "member"
                                    }
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ],
                "inbodydescription": [
                  "\n        "
                ],
                "location": [
                  {
                    "$": {
                      "file": "opencv2/videoio/cap_winrt.hpp",
                      "line": "128",
                      "column": "1"
                    }
                  }
                ]
              },
              {
                "$": {
                  "kind": "function",
                  "id": "dd/d01/group__videoio__winrt_1gaf781e41ae34a6993e0c7094bb7d5d6c8",
                  "prot": "public",
                  "static": "no",
                  "const": "no",
                  "explicit": "no",
                  "inline": "no",
                  "virt": "non-virtual"
                },
                "type": [
                  "void"
                ],
                "definition": [
                  "void cv::winrt_onVisibilityChanged"
                ],
                "argsstring": [
                  "(bool visible)"
                ],
                "name": [
                  "winrt_onVisibilityChanged"
                ],
                "param": [
                  {
                    "type": [
                      "bool"
                    ],
                    "declname": [
                      "visible"
                    ]
                  }
                ],
                "briefdescription": [
                  "\n        "
                ],
                "detaileddescription": [
                  {
                    "para": [
                      {
                        "simplesect": [
                          {
                            "$": {
                              "kind": "note"
                            },
                            "para": [
                              {
                                "_": "Must be called from WinRT specific callback to handle image grabber state. Here is how the class can be used:  ",
                                "programlisting": [
                                  {
                                    "codeline": [
                                      {
                                        "highlight": [
                                          {
                                            "_": "MainPage::MainPage()",
                                            "$": {
                                              "class": "normal"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "highlight": [
                                          {
                                            "_": "{",
                                            "$": {
                                              "class": "normal"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "highlight": [
                                          {
                                            "_": "    // ...",
                                            "$": {
                                              "class": "normal"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "highlight": [
                                          {
                                            "_": "    Window::Current->VisibilityChanged += ref new Windows::UI::Xaml::WindowVisibilityChangedEventHandler(this, &Application::MainPage::OnVisibilityChanged);",
                                            "$": {
                                              "class": "normal"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "highlight": [
                                          {
                                            "_": "    // ...",
                                            "$": {
                                              "class": "normal"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "highlight": [
                                          {
                                            "_": "}",
                                            "$": {
                                              "class": "normal"
                                            }
                                          }
                                        ]
                                      },
                                      "",
                                      {
                                        "highlight": [
                                          {
                                            "_": "void Application::MainPage::OnVisibilityChanged(Platform::Object ^sender,",
                                            "$": {
                                              "class": "normal"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "highlight": [
                                          {
                                            "_": "    Windows::UI::Core::VisibilityChangedEventArgs ^e)",
                                            "$": {
                                              "class": "normal"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "highlight": [
                                          {
                                            "_": "{",
                                            "$": {
                                              "class": "normal"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "highlight": [
                                          {
                                            "_": "    cv::winrt_onVisibilityChanged(e->Visible);",
                                            "$": {
                                              "class": "normal"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "highlight": [
                                          {
                                            "_": "}",
                                            "$": {
                                              "class": "normal"
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ],
                "inbodydescription": [
                  "\n        "
                ],
                "location": [
                  {
                    "$": {
                      "file": "opencv2/videoio/cap_winrt.hpp",
                      "line": "114",
                      "column": "1"
                    }
                  }
                ]
              },
              {
                "$": {
                  "kind": "function",
                  "id": "dd/d01/group__videoio__winrt_1ga1415c645960c00ec5f3878365bf9a348",
                  "prot": "public",
                  "static": "no",
                  "const": "no",
                  "explicit": "no",
                  "inline": "no",
                  "virt": "non-virtual"
                },
                "type": [
                  "void"
                ],
                "definition": [
                  "void cv::winrt_setFrameContainer"
                ],
                "argsstring": [
                  "(::Windows::UI::Xaml::Controls::Image^ image)"
                ],
                "name": [
                  "winrt_setFrameContainer"
                ],
                "param": [
                  {
                    "type": [
                      "::Windows::UI::Xaml::Controls::Image^"
                    ],
                    "declname": [
                      "image"
                    ]
                  }
                ],
                "briefdescription": [
                  "\n        "
                ],
                "detaileddescription": [
                  {
                    "para": [
                      {
                        "simplesect": [
                          {
                            "$": {
                              "kind": "note"
                            },
                            "para": [
                              {
                                "_": "Must be called to assign WinRT control holding image you're working with. Code sample is available for . ",
                                "ref": [
                                  {
                                    "_": "winrt_startMessageLoop()",
                                    "$": {
                                      "refid": "dd/d01/group__videoio__winrt_1gac0bbefb5e7954d63596698905f20b2ed",
                                      "kindref": "member"
                                    }
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ],
                "inbodydescription": [
                  "\n        "
                ],
                "location": [
                  {
                    "$": {
                      "file": "opencv2/videoio/cap_winrt.hpp",
                      "line": "121",
                      "column": "1"
                    }
                  }
                ]
              },
              {
                "$": {
                  "kind": "function",
                  "id": "dd/d01/group__videoio__winrt_1gac0bbefb5e7954d63596698905f20b2ed",
                  "prot": "public",
                  "static": "no",
                  "const": "no",
                  "explicit": "no",
                  "inline": "no",
                  "virt": "non-virtual"
                },
                "templateparamlist": [
                  {
                    "param": [
                      {
                        "type": [
                          "typename ..."
                        ],
                        "declname": [
                          "Args"
                        ],
                        "defname": [
                          "Args"
                        ]
                      }
                    ]
                  }
                ],
                "type": [
                  "void"
                ],
                "definition": [
                  "void cv::winrt_startMessageLoop"
                ],
                "argsstring": [
                  "(std::function< void(Args...)> &&callback, Args... args)"
                ],
                "name": [
                  "winrt_startMessageLoop"
                ],
                "param": [
                  {
                    "type": [
                      "std::function< void(Args...)> &&"
                    ],
                    "declname": [
                      "callback"
                    ]
                  },
                  {
                    "type": [
                      "Args..."
                    ],
                    "declname": [
                      "args"
                    ]
                  }
                ],
                "briefdescription": [
                  "\n        "
                ],
                "detaileddescription": [
                  "\n        "
                ],
                "inbodydescription": [
                  "\n        "
                ],
                "location": [
                  {
                    "$": {
                      "file": "opencv2/videoio/cap_winrt.hpp",
                      "line": "49",
                      "column": "1"
                    }
                  }
                ]
              },
              {
                "$": {
                  "kind": "function",
                  "id": "dd/d01/group__videoio__winrt_1ga029eab168c861bcb6f10802de9150d66",
                  "prot": "public",
                  "static": "no",
                  "const": "no",
                  "explicit": "no",
                  "inline": "no",
                  "virt": "non-virtual"
                },
                "templateparamlist": [
                  {
                    "param": [
                      {
                        "type": [
                          "typename ..."
                        ],
                        "declname": [
                          "Args"
                        ],
                        "defname": [
                          "Args"
                        ]
                      }
                    ]
                  }
                ],
                "type": [
                  "void"
                ],
                "definition": [
                  "void cv::winrt_startMessageLoop"
                ],
                "argsstring": [
                  "(void callback(Args...), Args... args)"
                ],
                "name": [
                  "winrt_startMessageLoop"
                ],
                "param": [
                  {
                    "type": [
                      "void "
                    ],
                    "declname": [
                      "callback"
                    ],
                    "array": [
                      "Args..."
                    ]
                  },
                  {
                    "type": [
                      "Args..."
                    ],
                    "declname": [
                      "args"
                    ]
                  }
                ],
                "briefdescription": [
                  "\n        "
                ],
                "detaileddescription": [
                  "\n        "
                ],
                "inbodydescription": [
                  "\n        "
                ],
                "location": [
                  {
                    "$": {
                      "file": "opencv2/videoio/cap_winrt.hpp",
                      "line": "52",
                      "column": "1"
                    }
                  }
                ]
              },
              {
                "$": {
                  "kind": "function",
                  "id": "dd/d01/group__videoio__winrt_1ga1d21b5d97771470f128859c8bc648f87",
                  "prot": "public",
                  "static": "no",
                  "const": "no",
                  "explicit": "no",
                  "inline": "no",
                  "virt": "non-virtual"
                },
                "type": [
                  "template void"
                ],
                "definition": [
                  "template void cv::winrt_startMessageLoop"
                ],
                "argsstring": [
                  "(void callback(void))"
                ],
                "name": [
                  "winrt_startMessageLoop"
                ],
                "param": [
                  {
                    "type": [
                      "void "
                    ],
                    "declname": [
                      "callback"
                    ],
                    "array": [
                      "void"
                    ]
                  }
                ],
                "briefdescription": [
                  "\n        "
                ],
                "detaileddescription": [
                  {
                    "para": [
                      {
                        "simplesect": [
                          {
                            "$": {
                              "kind": "note"
                            },
                            "para": [
                              {
                                "_": "Starts (1) frame-grabbing loop and (2) message loop\n",
                                "orderedlist": [
                                  {
                                    "listitem": [
                                      {
                                        "para": [
                                          {
                                            "_": "Function passed as an argument must implement common OCV reading frames pattern (see  documentation) AND call cv::winrt_imgshow().",
                                            "ref": [
                                              {
                                                "_": "cv::VideoCapture",
                                                "$": {
                                                  "refid": "d8/dfe/classcv_1_1VideoCapture",
                                                  "kindref": "compound"
                                                }
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "para": [
                                          {
                                            "_": "Message processing loop required to overcome WinRT container and type conversion restrictions. OCV provides default implementation Here is how the class can be used:  ",
                                            "programlisting": [
                                              {
                                                "codeline": [
                                                  {
                                                    "highlight": [
                                                      {
                                                        "_": "void cvMain()",
                                                        "$": {
                                                          "class": "normal"
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "highlight": [
                                                      {
                                                        "_": "{",
                                                        "$": {
                                                          "class": "normal"
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "highlight": [
                                                      {
                                                        "_": "    Mat frame;",
                                                        "$": {
                                                          "class": "normal"
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "highlight": [
                                                      {
                                                        "_": "    VideoCapture cam;",
                                                        "$": {
                                                          "class": "normal"
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "highlight": [
                                                      {
                                                        "_": "    cam.open(0);",
                                                        "$": {
                                                          "class": "normal"
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "",
                                                  {
                                                    "highlight": [
                                                      {
                                                        "_": "    while (1)",
                                                        "$": {
                                                          "class": "normal"
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "highlight": [
                                                      {
                                                        "_": "    {",
                                                        "$": {
                                                          "class": "normal"
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "highlight": [
                                                      {
                                                        "_": "        cam >> frame;",
                                                        "$": {
                                                          "class": "normal"
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "",
                                                  {
                                                    "highlight": [
                                                      {
                                                        "_": "        // don't reprocess the same frame again",
                                                        "$": {
                                                          "class": "normal"
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "highlight": [
                                                      {
                                                        "_": "        if (!cam.grab()) continue;",
                                                        "$": {
                                                          "class": "normal"
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "",
                                                  {
                                                    "highlight": [
                                                      {
                                                        "_": "        // your processing logic goes here",
                                                        "$": {
                                                          "class": "normal"
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "",
                                                  {
                                                    "highlight": [
                                                      {
                                                        "_": "        // obligatory step to get XAML image component updated",
                                                        "$": {
                                                          "class": "normal"
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "highlight": [
                                                      {
                                                        "_": "        winrt_imshow();",
                                                        "$": {
                                                          "class": "normal"
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "highlight": [
                                                      {
                                                        "_": "    }",
                                                        "$": {
                                                          "class": "normal"
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "highlight": [
                                                      {
                                                        "_": "}",
                                                        "$": {
                                                          "class": "normal"
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "",
                                                  {
                                                    "highlight": [
                                                      {
                                                        "_": "MainPage::MainPage()",
                                                        "$": {
                                                          "class": "normal"
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "highlight": [
                                                      {
                                                        "_": "{",
                                                        "$": {
                                                          "class": "normal"
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "highlight": [
                                                      {
                                                        "_": "    InitializeComponent();",
                                                        "$": {
                                                          "class": "normal"
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "",
                                                  {
                                                    "highlight": [
                                                      {
                                                        "_": "    cv::winrt_setFrameContainer(cvImage);",
                                                        "$": {
                                                          "class": "normal"
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "highlight": [
                                                      {
                                                        "_": "    cv::winrt_startMessageLoop(cvMain);",
                                                        "$": {
                                                          "class": "normal"
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "highlight": [
                                                      {
                                                        "_": "}",
                                                        "$": {
                                                          "class": "normal"
                                                        }
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ],
                "inbodydescription": [
                  "\n        "
                ],
                "location": [
                  {
                    "$": {
                      "file": "opencv2/videoio/cap_winrt.hpp",
                      "line": "93",
                      "column": "1"
                    }
                  }
                ]
              }
            ]
          }
        ],
        "briefdescription": [
          "\n    "
        ],
        "detaileddescription": [
          "\n    "
        ]
      }
    ]
  }
}